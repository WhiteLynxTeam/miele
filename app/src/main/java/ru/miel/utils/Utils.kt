package ru.miel.utils

import android.content.Context
import android.text.InputFilter
import android.widget.EditText
import android.widget.FrameLayout
import android.widget.TextView
import androidx.annotation.ColorRes
import androidx.appcompat.app.AlertDialog
import androidx.core.content.ContextCompat
import ru.miel.domain.models.HasUuid
import ru.miel.domain.models.enummodel.SortOption
import java.util.UUID

fun List<HasUuid>.randomUuid() {
    forEach { instance ->
        instance.uuid = UUID.randomUUID()
    }
}

fun String.replaceAfterLastSpace(replacement: String): String {
    val lastSpaceIndex = this.lastIndexOf(' ')

    return if (lastSpaceIndex != -1) {
        this.substring(0, lastSpaceIndex) + " " + replacement
    } else {
        "$this $replacement"
    }
}

fun String.replaceAfterLastSpace(digit: Int): String {
    val lastSpaceIndex = this.lastIndexOf(' ')

    return if (lastSpaceIndex != -1) {
        this.substring(0, lastSpaceIndex) + " $digit"
    } else {
        "$this $digit"
    }
}

fun TextView.setTextColorRes(@ColorRes colorRes: Int) {
    val color = ContextCompat.getColor(context, colorRes)
    setTextColor(color)
}

//    private fun showRadioDialog(callback: (Int) -> Unit) {
fun showRadioDialog(context: Context, callback: () -> Unit) {
    val options = SortOption.entries.map { it.text }.toTypedArray()

    AlertDialog.Builder(context)
        .setTitle("–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å")
        .setSingleChoiceItems(options, SortOption.getSelected()) { dialog, which ->
            SortOption.setSelected(which)
            callback()

            dialog.dismiss()
        }
        .show()
}

fun showQuotesDialog(context: Context, callback: (Int) -> Unit) {
    val input = EditText(context).apply {
        inputType = android.text.InputType.TYPE_CLASS_NUMBER // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≤–≤–æ–¥ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä–∞–º–∏
        setPadding(50, 20, 50, 20)
        filters = arrayOf(InputFilter.LengthFilter(2))
    }

    // üî• –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º EditText –≤ FrameLayout –∏ –∑–∞–¥–∞–µ–º –æ—Ç—Å—Ç—É–ø—ã
    val container = FrameLayout(context).apply {
        setPadding(50, 20, 50, 20) // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø—ã –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        addView(input)
    }

    AlertDialog.Builder(context)
        .setTitle("–ó–∞–ø—Ä–æ—Å –∫–≤–æ—Ç")
        .setMessage("–ö–≤–æ—Ç—ã:")
        .setView(container)  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º EditText –≤ –∫–∞—á–µ—Å—Ç–≤–µ view
        .setPositiveButton("–û–∫") { dialog, which ->
            val enteredValue = input.text.toString().trim()

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ - —ç—Ç–æ –¥–≤—É—Ö–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ
            if (enteredValue.toIntOrNull() != null) {
                val number = enteredValue.toInt()
                // –î–µ–π—Å—Ç–≤–∏–µ, –µ—Å–ª–∏ —á–∏—Å–ª–æ –≤–≤–µ–¥–µ–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
                callback(number)
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –≤–≤–æ–¥–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–∫–∞–∂–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                input.error = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–≤—É—Ö–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ"
            }

            dialog.dismiss()
        }
        .setNegativeButton("–û—Ç–º–µ–Ω–∞") { dialog, which ->
            dialog.dismiss()  // –ü—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
        }
        .show()
}

